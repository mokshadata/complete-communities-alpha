{"version":3,"sources":["redux/helpers.js","redux/constants.js","Projects/duck.js","Project/index.js","Projects/index.js","Filters/duck.js","Map/index.js","colors.js","Tags/index.js","Filters/index.js","App.js","redux/root.js","redux/index.js","serviceWorker.js","index.js"],"names":["createAction","R","type","getPayload","getMeta","payload","meta","createSimpleAction","createConstantAction","neighborhoods","ACRES HOME","NEAR NORTHSIDE","GULFTON","SECOND WARD","GREATER THIRD WARD","prefix","FETCH","concat","LOAD","CREATE","FILTER","SET_FILTER","SET_ACTIVE","fetchProjects","fetch","loadProjects","setFilter","setActive","initialState","activeFilters","oz","keys","items","filteredItems","active","hello","createReducer","assoc","item","evolve","append","state","action","console","log","mergeDeepLeft","project","id","Metrics","_ref","metrics","react_default","a","createElement","className","dist","size","map","metric","index","key","year","now","source","ListTags","_ref2","sectionName","list","_ref2$color","color","style","marginBottom","Group","isEmpty","Steps","_ref3","steps","step","makeSearchable","thing","JSON","stringify","values","replace","getSearchableContent","metricsSearchable","join","omit","Project","_ref4","_ref4$isActive","isActive","makeActive","data-jets","toLowerCase","onClick","Header","Title","Goal","position","right","Section","Content","Projects","eligiblePrograms","Field","Form","Input","neighborhoodNameToValue","invertObj","filterFns","activeNeighborhoods","includes","neighborhood","isOZ","quickProjectFilter","curry","filters","projects","pipe","toPairs","reduce","acc","Object","slicedToArray","filterName","value","filter","mapIndexed","addIndex","ConnectedFilteredProjects","connect","_ref3$projects","_ref3$projects$items","props","height","overflow","padding","Search","_Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateSearch","event","setState","search","target","inherits","createClass","placeholder","onChange","Component","_Component2","apply","arguments","Projects_Search","LOAD_PROGRAM_FILTERS","fetchNeighborhoods","loadNeighborhoods","filterGeoJSON","geoJSON","features","properties","SNBNAME","options","pickable","stroked","filled","extruded","lineWidthScale","lineWidthMinPixels","getRadius","getLineWidth","getElevation","autoHighlight","Map","updateTooltip","object","x","y","hoveredNeighborhood","name","handleClick","onShapeClick","_this2","viewport","width","latitude","longitude","zoom","_partition","partition","layer","path","data","_partition2","activeLayers","inactiveLayers","dist_esm","assign","controller","initialViewState","gapless","left","top","display","getFillColor","highlightColor","onHover","esm","mapOptions","semanticColors","OZ Eligible","Potential Programs","Lead Partners","Support Parners","FilterTag","children","handleDelete","remove","preventDefault","Filters","_getPrototypeOf2","_len","length","args","Array","_key","toggleNeighborhood","updatedNeighborhoods","reject","equals","toggleOZ","Map_Map","marginTop","_ref$filters$neighbor","_ref$projects$activeF","App","fluid","Column","src_Projects","src_Filters","rootEpic","combineEpics","action$","ofType","mergeMap","ajax","getJSON","process","rootReducer","combineReducers","epicMiddleware","createEpicMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","configureStore","store","createStore","applyMiddleware","run","Boolean","location","hostname","match","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f94dc51f.chunk.js","sourcesContent":["import * as R from 'ramda'\n\nexport const createAction = R.curry(\n  (type, getPayload, getMeta) => R.compose(\n    R.reject(R.isNil),\n    R.applySpec({\n      type: R.always(type),\n      payload: getPayload,\n      meta: getMeta,\n    })\n  )\n)\n\nexport const createSimpleAction = createAction(\n  R.__,\n  R.identity,\n  R.always(null),\n)\n\nexport const createConstantAction = createAction(\n  R.__,\n  R.always(null),\n  R.always(null),\n)","export const neighborhoods = {\n  'ACRES HOME': 'Acres Homes',\n  'NEAR NORTHSIDE': 'Near Northside',\n  'GULFTON': 'Gulfton',\n  'SECOND WARD': 'Second Ward',\n  'GREATER THIRD WARD': 'Third Ward',\n}","import { evolve, mergeDeepLeft, assoc, append, includes, keys } from 'ramda'\nimport { createReducer } from 'redux-ramda'\nimport { map, mergeMap, filter } from 'rxjs/operators'\nimport { ajax } from 'rxjs/ajax'\nimport { ofType } from 'redux-observable'\n\nimport { createSimpleAction, createConstantAction } from '../redux/helpers'\nimport { neighborhoods } from '../redux/constants'\n\n// Action Types\nconst prefix = 'opportunity-zones/projects/'\n\nconst FETCH = `${prefix}FETCH`\nconst LOAD = `${prefix}LOAD`\nconst CREATE = `${prefix}CREATE`\n// const UPDATE = `${prefix}UPDATE`\n// const REMOVE = `${prefix}REMOVE`\nconst FILTER = `${prefix}FILTER`\nconst SET_FILTER  = `${prefix}SET_FILTER`\nconst SET_ACTIVE = `${prefix}SET_ACTIVE`\n\nexport const actionTypes = {\n  fetch, FETCH,\n  load: LOAD,\n  create: CREATE,\n  // update: UPDATE,\n  // remove: REMOVE,\n  filter: FILTER,\n  setFilter: SET_FILTER,\n  setActive: SET_ACTIVE,\n}\n\n// Action Creators\nexport const fetchProjects = createConstantAction(FETCH)\nexport const loadProjects = createSimpleAction(LOAD)\nexport const createProject = createSimpleAction(CREATE)\nexport const filterProjects = createSimpleAction(FILTER)\nexport const setFilter = createSimpleAction(SET_FILTER)\nexport const setActive = createSimpleAction(SET_ACTIVE)\n\n// Reducer\nconst initialState = {\n  activeFilters: {\n    oz: false,\n    neighborhoods: keys(neighborhoods),\n  },\n  items: [],\n  filteredItems: [],\n  active: '',\n  hello: ''\n}\n\nexport default createReducer(\n  initialState, [\n    [\n      LOAD, assoc('items')\n    ],\n    [\n      CREATE, (item) => evolve({\n        items: append(item),\n      }),\n    ],\n    [\n      FILTER, (state, action) => {\n        console.log(state, action)\n        return state\n      }\n    ],\n    [\n      SET_FILTER, (activeFilters) => mergeDeepLeft({ activeFilters })\n    ],\n    [\n      SET_ACTIVE, (project) => assoc('active', project.id)\n    ],\n])\n\n// Side-effects\nexport function fetchProjectsEpic(action$) {\n  return action$.pipe(\n    ofType(FETCH),\n    mergeMap(action =>\n      ajax.getJSON(`${process.env.REACT_APP_BASE_URL}data/complete-communities-projects.json`)\n        .pipe(\n          map(loadProjects)\n        )\n    ),\n  )\n}\n\nexport function filterProjectsEpic(action$, state$) {\n  return action$.pipe(\n    filter((action) => includes(action.type)([LOAD, SET_FILTER])),\n    // mergeMap(filterProjects),\n  )\n}","import React from 'react'\nimport { Tag, Card, Content, Heading } from 'react-bulma-components'\nimport './metric.css'\nimport { isEmpty, omit, values, map } from 'ramda'\n\nexport function Metrics({ metrics }) {\n  return (<div className='metrics-list project--section'>\n    <Heading size={6}>\n      Metrics\n    </Heading>\n    {\n      metrics.map((metric, index) => (\n        <div className='metrics-list--item' key={index}>\n          <p className='metrics-list--by'>{ metric.year || '????' }</p>\n          <p className='metrics-list--metric'>{metric.metric}</p>\n          {metric.now? <p className='metrics-list--now'>{metric.now}</p> : null}\n          {metric.source? <p className='metrics-list--source'>{metric.source}</p> : null}\n        </div>\n      ))\n    }\n  </div>)\n}\n\nexport function ListTags({ sectionName, list, color = 'light' }) {\n  return (<div className='project--section'>\n    <Heading size={6} style={{marginBottom: '0.25em'}}>{ sectionName }</Heading>\n    <Tag.Group>\n      {\n        (isEmpty(list) && <i>to be determined</i>) ||\n        list.map((item, index) => (\n          <Tag key={ index } color={color} className='is-medium'>{ item }</Tag>\n        ))\n      }\n    </Tag.Group>\n  </div>)\n}\n\nexport function Steps({ steps }){\n  return (<ul className='project-steps project--section'>\n    { steps.map((step, index) => <li key={index}>{step}</li>)}\n  </ul>)\n}\n\nexport function makeSearchable(thing) {\n  return JSON.stringify(values(thing))\n    .replace(/{|}|\\:|\\[|\\]|\"|\\,/g, ' ')\n}\n\nexport function getSearchableContent(project) {\n  const metricsSearchable = map(makeSearchable, project.metrics).join(' ')\n  return makeSearchable(omit(['id', 'metrics'], project)) + ' ' + metricsSearchable\n}\n\nexport function Project({ project, isActive = false, makeActive }) {\n\n  return (\n    <Card\n      className={`project ${isActive && 'active'}`}\n      data-jets={getSearchableContent(project).toLowerCase()}\n      style={{marginBottom: '2rem'}}\n      onClick={makeActive}>\n      <Card.Header>\n        <Card.Header.Title>\n          { project.Goal }\n          <Tag.Group  style={{position: 'absolute', right: '1em'}}>\n            <Tag color='info' style={{marginBottom: 0}}>\n              { project.Section }\n            </Tag>\n            <Tag color='warning' style={{marginBottom: 0}}>\n              { project['neighborhood'] }\n            </Tag>\n          </Tag.Group>\n        </Card.Header.Title>\n      </Card.Header>\n      <Card.Content>\n        <Content>\n          <Heading size={5}>\n            { project.Projects }\n          </Heading>\n          {isActive? <Steps steps={project.steps}/> : null}\n          {(isActive && !isEmpty(project.metrics))? <Metrics metrics={project.metrics}/> : null}\n          <ListTags\n            sectionName='Eligible Programs'\n            list={project.eligiblePrograms}\n            color='primary'\n          />\n          {isActive && <ListTags\n            sectionName='Potential Programs'\n            list={project['Potential Programs']}\n          />}\n          {isActive && <ListTags\n            sectionName='Lead Partners'\n            list={project['Lead Partners']}\n          />}\n          {isActive && <ListTags\n            sectionName='Support Partners'\n            list={project['Support Partners']}\n          />}\n        </Content>\n      </Card.Content>\n    </Card>\n  )\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchProjects, setActive } from './duck'\nimport { Project } from '../Project'\nimport { neighborhoods } from '../redux/constants'\nimport {\n  filter,\n  includes,\n  invertObj,\n  toPairs,\n  reduce,\n  map,\n  pipe,\n  curry,\n  addIndex,\n} from 'ramda'\nimport { Form } from 'react-bulma-components'\nconst {\n  Field,\n  Input,\n} = Form\nconst neighborhoodNameToValue = invertObj(neighborhoods)\n\nconst filterFns = {\n  neighborhoods: (activeNeighborhoods, project) => (includes(neighborhoodNameToValue[project.neighborhood], activeNeighborhoods)),\n  oz: (isOZ, project) => (isOZ && includes('Opportunity Zone', project.eligiblePrograms || [])) || (!isOZ && true),\n}\n\nconst quickProjectFilter = curry(\n  (filters, projects) => {\n    return pipe(\n      toPairs,\n      reduce((acc, [filterName, value]) => (\n        filter(curry(filterFns[filterName])(value))(acc)\n      ), projects),\n    )(filters)\n  }\n)\n\nconst mapIndexed = addIndex(map)\n\nexport function FilteredProjects(props) {\n  const projects = quickProjectFilter(props.activeFilters)(props.projects)\n  return (<div id='projects'\n    style={{\n      height: 'calc(100vh - 160px)',\n      overflow: 'auto',\n      padding: '1px',\n    }}>\n    {\n      mapIndexed((project) => {\n        return <Project\n          project={project}\n          key={project.id}\n          makeActive={() => props.setActive(project)}\n          isActive={props.active === project.id}\n        />\n      })(projects)\n    }\n  </div>)\n}\n\nconst ConnectedFilteredProjects = connect(\n  ( {\n      projects: { items = [], activeFilters, active },\n    } ) => ({ projects: items, activeFilters, active }),\n  { setActive },\n)(FilteredProjects)\n\nexport class Search extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      search: ''\n    }\n  }\n  updateSearch = (event) => {\n    this.setState({\n      search: event.target.value,\n    })\n  }\n  render() {\n    return (<div>\n      <style>\n        {this.state.search && `#projects>:not([data-jets*=\"${this.state.search.toLowerCase()}\"]){display:none}`}\n      </style>\n      <Field><Input\n        color='primary'\n        placeholder='Find a Complete Communities Project.'\n        type='search'\n        className='is-large'\n        id='projects-search'\n        value={this.state.search}\n        onChange={this.updateSearch}\n      /></Field>\n    </div>)\n  }\n}\n\nexport class Projects extends Component {\n  componentWillMount() {\n    this.props.fetchProjects()\n  }\n  render() {\n    return (\n        <div>\n          <Search/>\n          <ConnectedFilteredProjects/>\n        </div>\n    )\n  }\n}\n\nexport default connect(\n  null,\n  { fetchProjects },\n)(Projects)\n","import { includes, assoc, keys } from 'ramda'\nimport { createReducer } from 'redux-ramda'\nimport { map, mergeMap } from 'rxjs/operators'\nimport { ajax } from 'rxjs/ajax'\nimport { ofType } from 'redux-observable'\n\nimport { createSimpleAction, createConstantAction } from '../redux/helpers'\nimport { neighborhoods } from '../redux/constants'\n\n// Action Types\nconst prefix = 'opportunity-zones/neighborhoods/'\n\nconst FETCH = `${prefix}FETCH`\nconst LOAD = `${prefix}LOAD`\n\nconst LOAD_PROGRAM_FILTERS = `${prefix}LOAD_PROGRAM_FILTERS`\n\nexport const actionTypes = {\n  fetch, FETCH,\n  load: LOAD,\n  loadProgramFilters: LOAD_PROGRAM_FILTERS,\n}\n\n// Action Creators\nexport const fetchNeighborhoods = createConstantAction(FETCH)\nexport const loadNeighborhoods = createSimpleAction(LOAD)\nexport const loadProgramFilters = createSimpleAction(LOAD_PROGRAM_FILTERS)\n\nexport function filterGeoJSON(geoJSON) {\n  const features = geoJSON.features.filter((item) => (\n    includes(item.properties.SNBNAME, keys(neighborhoods))\n  ))\n\n  return assoc('features', features)({\n    type: 'FeatureCollection',\n  })\n}\n\n// Reducer\nconst initialState = {\n  neighborhoods: {\n    features: [],\n    type: 'FeatureCollection',\n  },\n  projects: {},\n}\n\nexport default createReducer(\n  initialState, [\n    [\n      LOAD, assoc('neighborhoods')\n    ],\n    // [\n    //   LOAD_PROGRAM_FILTERS, (programs) => (\n    //     pipe(\n    //       pick(['eligiblePrograms', 'excludedPrograms', 'Section', 'Prority', 'Timeline', 'Lead Partners', 'Support Partners', 'Potential Programs']),\n    //       mapObjIndexed((program) => ())\n    //     )\n    //   )\n    // ],\n])\n\n// Side-effects\nexport function fetchNeighborhoodsEpic(action$) {\n  return action$.pipe(\n    ofType(FETCH),\n    mergeMap(action =>\n      ajax.getJSON(`${process.env.REACT_APP_BASE_URL}data/Super_Neighborhoods.geojson`)\n        .pipe(\n          map(filterGeoJSON),\n          map(loadNeighborhoods),\n        )\n    ),\n  )\n}","import React, { Component } from 'react'\nimport { StaticMap } from 'react-map-gl'\nimport DeckGL, { GeoJsonLayer } from 'deck.gl'\nimport { path, includes, partition } from 'ramda'\nimport { neighborhoods } from '../redux/constants'\n\nimport { Tag } from 'react-bulma-components'\n\nconst options = {\n  pickable: true,\n  stroked: false,\n  filled: true,\n  extruded: true,\n  lineWidthScale: 20,\n  lineWidthMinPixels: 2,\n  getRadius: 100,\n  getLineWidth: 1,\n  getElevation: 30,\n  autoHighlight: true,\n}\n\nexport class Map extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      hoveredNeighborhood: {\n        x: 0,\n        y: 0,\n      },\n    }\n  }\n\n  updateTooltip = ({object, x, y}) => {\n    this.setState({\n      hoveredNeighborhood: {\n        name: neighborhoods[(object && object.properties.SNBNAME)],\n        x, y,\n      },\n    })\n  }\n\n  handleClick = ({object}) => {\n    this.props.onShapeClick(object && object.properties.SNBNAME)\n  }\n\n  render() {\n    const viewport = {\n      width: '100%',\n      height: 400,\n      latitude: 29.8,\n      longitude: -95.4,\n      zoom: 10,\n    }\n\n    const [active, inactive] = partition(\n      (layer) => includes(path(['properties', 'SNBNAME'])(layer), this.props.activeNeighborhoods)\n    )(this.props.data.features)\n\n    const activeLayers = {\n      features: active,\n      type: 'FeatureCollection',\n    }\n\n    const inactiveLayers = {\n      features: inactive,\n      type: 'FeatureCollection',\n    }\n\n    return (\n    <div\n      style={{\n        height: viewport.height\n      }}>\n      <DeckGL\n        controller={true}\n        initialViewState={viewport}\n        {...viewport}\n      >\n        {\n          <Tag.Group className='map-tooltip' gapless style={{\n            left: this.state.hoveredNeighborhood.x + 10,\n            top: this.state.hoveredNeighborhood.y - 20,\n            display: (this.state.hoveredNeighborhood.name && 'block') || 'none',\n          }}>\n            <Tag color='warning'>\n              {this.state.hoveredNeighborhood.name}\n            </Tag>\n          </Tag.Group>\n        }\n        <GeoJsonLayer\n          id='active-neighborhoods'\n          data={activeLayers}\n          {...options}\n          getFillColor={[255, 221, 87, 255]}\n          highlightColor={[255, 221, 87, 200]}\n          onClick={this.handleClick}\n          onHover={this.updateTooltip}\n        />\n        <GeoJsonLayer\n          id='inactive-neighborhoods'\n          data={inactiveLayers}\n          {...options}\n          getFillColor={[160, 160, 180, 200]}\n          onClick={this.handleClick}\n          onHover={this.updateTooltip}\n        />\n        <StaticMap\n          {...viewport}\n          mapOptions={{\n            style: 'mapbox://styles/mapbox/streets-v10',\n          }}\n        />\n      </DeckGL>\n    </div>)\n  }\n}\n","export const colors = {\n  black:        'hsl(0, 0%, 4%)',\n  'black-bis':  'hsl(0, 0%, 7%)',\n  'black-ter':  'hsl(0, 0%, 14%)',\n  'grey-darker':'hsl(0, 0%, 21%)',\n  'grey-dark':  'hsl(0, 0%, 29%)',\n  grey:         'hsl(0, 0%, 48%)',\n  'grey-light': 'hsl(0, 0%, 71%)',\n  'grey-lighter': 'hsl(0, 0%, 86%)',\n  'white-ter':  'hsl(0, 0%, 96%)',\n  'white-bis':  'hsl(0, 0%, 98%)',\n  white:  'hsl(0, 0%, 100%)',\n  orange: 'hsl(14, 100%, 53%)',\n  yellow: 'hsl(48, 100%, 67%)',\n  green:  'hsl(141, 71%, 48%)',\n  turquoise: 'hsl(171, 100%, 41%)',\n  cyan:   'hsl(204, 86%, 53%)',\n  blue:   'hsl(217, 71%, 53%)',\n  purple: 'hsl(271, 100%, 71%)',\n  red:    'hsl(348, 100%, 61%)',\n}\n\nexport const modeColors = {\n  primary:  'turquoise',\n  info:     'cyan',\n  success:  'green',\n  warning:  'yellow',\n  danger:   'red',\n  light:    'white-ter',\n  dark:     'grey-darker',\n}\n\nexport const semanticColors = {\n  neighborhood: 'warning',\n  eligiblePrograms:     'primary',\n  Section:      'info',\n  'OZ Eligible':'success',\n  'Potential Programs': 'primary',\n  'Lead Partners': 'info',\n  'Support Parners': 'info',\n}","import React from 'react'\nimport { Tag, Button } from 'react-bulma-components'\n\nimport { semanticColors } from '../colors'\n\nexport function FilterTag({ type, children, handleDelete }){\n  return <Tag color={semanticColors[type]}>\n    { children }\n    <Button color={semanticColors[type]} remove onClick={(event) => {\n      event.preventDefault()\n      handleDelete()\n    }}/>\n  </Tag>\n}\n\nexport function LabelTag({ type, children, handleToggle }){\n  return <Tag color={semanticColors[type]} onClick={(event) => {\n    event.preventDefault()\n    handleToggle()\n  }}>\n    { children }\n  </Tag>\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchNeighborhoods } from './duck'\nimport { setFilter } from '../Projects/duck'\n\nimport Switch from 'react-bulma-switch/lib'\nimport { Heading, Tag } from 'react-bulma-components'\nimport { neighborhoods } from '../redux/constants'\n\nimport { Map } from '../Map'\nimport { FilterTag } from '../Tags'\n\nimport { append, reject, equals, includes } from 'ramda'\n\nexport class Filters extends Component {\n  componentWillMount() {\n    this.props.fetchNeighborhoods()\n  }\n  toggleNeighborhood = (neighborhood) => {\n    const activeNeighborhoods = this.props.activeFilters.neighborhoods\n    const hasNeighborhood = includes(neighborhood, activeNeighborhoods)\n\n    const updatedNeighborhoods = (\n      (hasNeighborhood && reject(equals(neighborhood))) ||\n      append(neighborhood)\n    )(activeNeighborhoods)\n\n    this.props.setFilter({\n      neighborhoods: updatedNeighborhoods,\n    })\n  }\n  toggleOZ = () => {\n    this.props.setFilter({\n      oz: !this.props.activeFilters.oz\n    })\n  }\n  render() {\n    return (\n      <div style={{position: 'relative'}}>\n        <Map\n          data={this.props.neighborhoods}\n          onShapeClick={this.toggleNeighborhood}\n          activeNeighborhoods={this.props.activeFilters.neighborhoods}\n        />\n        <Heading size={5} style={{\n          marginTop: '1rem',\n          marginBottom: '0.25rem',\n        }}>Filters</Heading>\n        <Tag.Group>{\n          this.props.activeFilters.neighborhoods\n            .map((neighborhood, index) => <FilterTag\n              handleDelete={() => this.toggleNeighborhood(neighborhood)}\n              key={index}\n              type='neighborhood'>\n                {neighborhoods[neighborhood]}\n              </FilterTag>\n            )\n        }</Tag.Group>\n        {/* <Switch\n          value={this.props.activeFilters.oz}\n          onChange={this.toggleOZ}\n          rounded\n          outlined\n          >\n          Eligible for Opportunity Zone\n        </Switch> */}\n        {/* <Field>\n          <Label>Name</Label>\n          <Control>\n            <Input/>\n          </Control>\n        </Field> */}\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  ( {\n      filters: { neighborhoods = {} },\n      projects: { activeFilters = {} },\n    } ) => ({ neighborhoods, activeFilters }),\n  {\n    fetchNeighborhoods,\n    setFilter,\n  },\n)(Filters)\n","import React, { Component } from 'react';\nimport 'react-bulma-components/dist/react-bulma-components.min.css';\nimport 'bulma-steps/dist/css/bulma-steps.min.css'\n\nimport { Section, Container, Columns } from 'react-bulma-components'\n\nimport Projects from './Projects'\nimport Filters from './Filters'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Section>\n          <Container fluid>\n            <Columns>\n              <Columns.Column size={7}>\n                <Projects/>\n              </Columns.Column>\n              <Columns.Column>\n                <Filters/>\n              </Columns.Column>\n            </Columns>\n          </Container>\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineEpics } from 'redux-observable'\nimport { combineReducers } from 'redux'\nimport projects, { fetchProjectsEpic } from '../Projects/duck'\nimport filters, { fetchNeighborhoodsEpic } from '../Filters/duck'\n\nexport const rootEpic = combineEpics(\n  fetchProjectsEpic,\n  // filterProjectsEpic,\n  fetchNeighborhoodsEpic,\n)\n\nexport const rootReducer = combineReducers({\n  projects,\n  filters,\n})","import { createStore, applyMiddleware, compose } from 'redux'\nimport { createEpicMiddleware } from 'redux-observable'\nimport { rootEpic, rootReducer } from './root'\n\nconst epicMiddleware = createEpicMiddleware()\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport function configureStore() {\n  const store = createStore(\n    rootReducer,\n    composeEnhancers(\n      applyMiddleware(epicMiddleware),\n    )\n  )\n\n  epicMiddleware.run(rootEpic)\n\n  return store\n}\n\nexport default configureStore()","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'mapbox-gl/dist/mapbox-gl.css'\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './redux'\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}